import type { Metadata } from 'next';
import { Geist, Geist_Mono } from 'next/font/google';
import { SidebarInset, SidebarProvider } from '@/components/ui/sidebar';
import { AppSidebar } from '../_components/app-sidebar';
import { SiteHeader } from '../_components/site-header';
import { mapSessionToUser } from '@/lib/session-helper';
import { auth } from '@/lib/auth';
import { redirect } from 'next/navigation';
import '../../../globals.css';

const geistSans = Geist({
  variable: '--font-geist-sans',
  subsets: ['latin'],
});

const geistMono = Geist_Mono({
  variable: '--font-geist-mono',
  subsets: ['latin'],
});

export const metadata: Metadata = {
  title: ' Dashboard Orang Tua Siswa',
  description: 'Generated by create next app',
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const session = await auth();

  if (!session || !session.user) {
    return redirect('/login-orangtua');
  }

  if (session.user.role !== 'orangtua') {
    const roleRedirect: Record<string, string> = {
      guru: '/dashboard/teachers',
      siswa: '/dashboard/students',
    };

    return redirect(
      roleRedirect[session.user.role as keyof typeof roleRedirect] || '/'
    );
  }

  const { user } = session || {};

  const dataUser = mapSessionToUser({
    user,
    expires: '',
  });
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <SidebarProvider>
          <AppSidebar
            variant="inset"
            dataUser={dataUser}
            role={session.user.role}
          />
          <SidebarInset>
            <SiteHeader />
            {children}
          </SidebarInset>
        </SidebarProvider>
      </body>
    </html>
  );
}
